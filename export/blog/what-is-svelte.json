{"author":{"name":"Matt Crouch","image":"/images/matt-crouch.jpg"},"image":"/images/svelte.png","title":"What is Svelte?","slug":"what-is-svelte","html":"<p><a href=\"https://svelte.dev/\">Svelte</a> is a unique approach to the modern JavaScript framework. It prides itself on having fantastic speed and performance benchmarks compared to other frameworks. But how does that work?</p>\n<p>Unlike traditional front-end frameworks like React or Vue, Svelte does not require a runtime. Lots of the work is done at compile time, which allows Svelte to strip out everything that doesn&#39;t get used. Everything else can be optimised to best work with the content of the application.</p>\n<p>There&#39;s also no need for something like React&#39;s virtual DOM diffing to achieve peak performance. As Svelte knows exactly how an to update the page ahead of time. The result is a speedy site with a small footprint.</p>\n<h2 id=\"component-structure\">Component structure</h2>\n<p>A Svelte component live all in one file. The <code>.svelte</code> components contain <code>&lt;script&gt;</code> tags for the necessary JavaScript, <code>&lt;style&gt;</code> tags for CSS and the rest is purely HTML to handle the display side of things.</p>\n<p>For example, here&#39;s a slimmed down <code>PostSummary.svelte</code> component from this very site:</p>\n<pre><code class=\"language-html\">&lt;script&gt;\n  // Define attributes to expose on this component\n  export let author;\n&lt;/script&gt;\n\n&lt;style&gt;\n  /* Style the  component */\n  a {\n    margin: 0;\n    text-decoration: none;\n  }\n&lt;/style&gt;\n\n&lt;!-- Create the markup --&gt;\n&lt;a rel=&quot;prefetch&quot; href=&quot;/blog/{slug}&quot;&gt;\n  &lt;!-- Summary content --&gt;\n&lt;/a&gt;</code></pre>\n<p>Attributes are defined as exported values within the <code>&lt;script&gt;</code> block. These values can be populated by the consuming component and when they change, the values inside the component change too.</p>\n<p>Styles defined within a component do not leak out to other components across the application. This means we are free to be as generic as we like when defining selectors - goodbye BEM!</p>\n<p>The rest of the component is purely markup. There are some Svelte-specific syntax in there such a if statements and event handlers, but this will all look familiar when comparing to something like Angular. It looks, feels and works just like regular old HTML and that&#39;s the best part.</p>\n<h2 id=\"want-to-learn-more\">Want to learn more?</h2>\n<p>There&#39;s plenty more to Svelte components. Check out the <a href=\"https://svelte.dev/\">Svelte docs</a> to get the full scoop on what&#39;s possible.</p>\n<p>For a more structured approach, there is a comprehensive interactive <a href=\"https://svelte.dev/tutorial/basics\">tutorial</a> on their website ready to try out. Find a problem and see exactly how Svelte helps solve it.</p>\n"}